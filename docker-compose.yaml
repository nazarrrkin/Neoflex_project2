x-airflow-common: &airflow-common
  environment:
    &airflow-common-env
    AIRFLOW_CORE_EXECUTOR: CeleryExecutor
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/dwh
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW_CORE_FERNET_KEY: ''
    AIRFLOW__CORE_DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW_CORE_LOAD_EXAMPLES: 'false'
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 5
    _AIRFLOW_DB_MIGRATE: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: admin
    _AIRFLOW_WWW_USER_PASSWORD: admin
  volumes:
    - ./airflow_dockerfile/dags:/opt/airflow/dags
    - ./airflow_dockerfile/logs:/opt/airflow/logs
    - ./airflow_dockerfile/plugins:/opt/airflow/plugins
    - ./airflow_dockerfile/scripts:/opt/airflow/scripts
    - ./airflow_dockerfile/airflow.cfg:/opt/airflow/airflow.cfg
  depends_on:
    &airflow-common-depends-on
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: DS
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./airflow_dockerfile/plugins:/opt/airflow/plugins
      - ./airflow_dockerfile/scripts:/opt/airflow/scripts
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 30s
      retries: 5

  redis:
    image: redis:7.2-bookworm
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: on-failure

  af-webserver:
    <<: *airflow-common
    build:
      context: ./airflow_dockerfile
      dockerfile: dockerfile
    container_name: af-webserver
    environment:
      *airflow-common-env
    command: airflow webserver
    ports:
      - "8080:8080"
    restart: on-failure

  af-scheduler:
    <<: *airflow-common
    build:
      context: ./airflow_dockerfile
      dockerfile: dockerfile
    container_name: af-scheduler
    environment:
      *airflow-common-env
    command: airflow scheduler
    restart: on-failure

  af-worker:
    <<: *airflow-common
    build:
      context: ./airflow_dockerfile
      dockerfile: dockerfile
    container_name: af-worker
    environment:
      *airflow-common-env
    command: airflow celery worker
    restart: on-failure

  airflow-init:
    <<: *airflow-common
    build:
      context: ./airflow_dockerfile
      dockerfile: dockerfile
    container_name: airflow-init
    command: db init
    restart: on-failure
    environment:
      <<: *airflow-common-env

volumes:
  postgres-db-volume:
